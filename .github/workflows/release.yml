# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Read Version
        id: ver
        run: |
          export ver=`cat version.txt`
          echo "::set-output name=ver::$ver"

      - name: Patch version
        run: git apply ../commit.patch
        working-directory: ./mirai-api-http

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Grant Execute Permission for gradlew
        run: chmod +x gradlew
        working-directory: ./mirai-api-http

      - name: Build with Gradle
        run: ./gradlew buildCiJar
        working-directory: ./mirai-api-http

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.ver.outputs.ver }}
          release_name: mirai-api-http-${{ steps.ver.outputs.ver }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./mirai-api-http/mirai-api-http/build/ci/mirai-api-http.jar
          asset_name: mirai-api-http-${{ steps.ver.outputs.ver }}.mirai.jar
          asset_content_type: application/zip
